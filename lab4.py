if __name__ == "__main__":
    class Animal:
        """
        Базовый класс для представления животных.
        """

        def __init__(self, name: str, age: int):
            """
            Конструктор базового класса.

            :param name: Имя животного.
            :param age: Возраст животного в годах.
            """
            self._name = name  # Используем инкапсуляцию для скрытия атрибута от прямого доступа
            self._age = age

        def make_sound(self) -> str:
            """
            Метод, который производит звук издаваемый животным.

            :return: Звук, издаваемый животным.
            """
            # Реализация метода может зависеть от типа животного
            pass

        def sleep(self) -> str:
            """
            Метод, который отображает сон животного.

            :return: Сообщение о сне животного.
            """
            # Реализация метода может включать в себя информацию о продолжительности сна
            pass

        def __str__(self) -> str:
            """
            Метод для представления объекта в виде строки.

            :return: Строковое представление объекта.
            """
            return f"{self._name}, {self._age} years old"

        def __repr__(self) -> str:
            """
            Метод для представления объекта в виде строки при использовании repr().

            :return: Строковое представление объекта.
            """
            return f"{self.__class__.__name__}(name={self._name!r}, age={self._age!r})"


    class Dog(Animal):
        """
        Дочерний класс для представления собак.
        """

        def __init__(self, name: str, age: int, breed: str):
            """
            Конструктор дочернего класса.

            :param name: Имя собаки.
            :param age: Возраст собаки в годах.
            :param breed: Порода собаки.
            """
            super().__init__(name, age)
            self._breed = breed  # Используем инкапсуляцию для скрытия атрибута от прямого доступа

        def make_sound(self) -> str:
            """
            Перегруженный метод издавания звука собакой.

            :return: Звук, издаваемый собакой.
            """
            # Собаки обычно лают
            return "Woof! Woof!"

        def fetch(self) -> str:
            """
            Метод собаки "Принеси мач".

            :return: Сообщение о том что собака принесла мяч.
            """
            # Реализация метода может включать в себя бег собаки и возврат мяча
            pass

        def __repr__(self) -> str:
            """
            Перегруженный метод для представления объекта в виде строки при использовании repr().

            :return: Строковое представление объекта.
            """
            return f"{self.__class__.__name__}(name={self._name!r}, age={self._age!r}, breed={self._breed!r})"

